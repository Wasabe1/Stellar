#include "Ghost.h"

Ghost::Ghost() {}

void Ghost::init(int size, int speed) {
    _size = size;
    _x = WIDTH + 1;
    _y = HEIGHT/2 - _size/2;
    act = 0;
    _velocity.x = speed;
    _velocity.y = speed;
}

void Ghost::draw(N5110 &lcd) {
    const int ghost1[13][13]= {

    { 0,0,1,1,1,1,1,1,1,1,0,0,0},
    { 0,1,1,1,1,1,1,1,1,1,1,0,0},
    { 1,1,0,0,1,1,1,0,0,1,1,1,0},
    { 1,0,0,0,0,1,0,0,0,0,1,1,0},
    { 1,0,1,1,0,1,0,1,1,0,1,1,0},
    { 1,0,1,1,0,1,0,1,1,0,1,1,0},
    { 1,1,0,0,1,1,1,0,0,1,1,1,0},
    { 1,1,1,1,1,1,1,1,1,1,1,1,0},
    { 1,1,1,1,1,1,1,1,1,1,1,1,0},
    { 1,1,1,1,1,1,1,1,1,1,1,1,0},
    { 1,1,1,1,1,1,1,1,1,1,1,1,0},
    { 1,1,0,1,1,1,1,0,1,1,1,1,0},
    { 1,0,0,0,1,1,0,0,0,0,1,1,0},
}; 
    const int ghost2[13][13]= {

    { 0,0,1,1,1,1,1,1,1,1,0,0,0},
    { 0,1,1,1,1,1,1,1,1,1,1,0,0},
    { 1,1,0,0,1,1,1,0,0,1,1,1,0},
    { 1,0,0,0,0,1,0,0,0,0,1,1,0},
    { 1,1,1,0,0,1,1,1,0,0,1,1,0},
    { 1,1,1,0,0,1,1,1,0,0,1,1,0},
    { 1,1,0,0,1,1,1,0,0,1,1,1,0},
    { 1,1,1,1,1,1,1,1,1,1,1,1,0},
    { 1,1,1,1,1,1,1,1,1,1,1,1,0},
    { 1,1,1,1,1,1,1,1,1,1,1,1,0},
    { 1,1,1,1,1,1,1,1,1,1,1,1,0},
    { 1,1,1,1,0,1,1,1,1,0,1,1,0},
    { 0,1,1,0,0,0,1,1,0,0,0,1,0},
}; 
    const int ghost3[13][13]= {

    { 0,0,1,1,1,1,1,1,1,1,0,0,0},
    { 0,1,1,1,1,1,1,1,1,1,1,0,0},
    { 1,1,0,0,1,1,1,0,0,1,1,1,0},
    { 1,0,0,0,0,1,0,0,0,0,1,1,0},
    { 1,1,1,0,0,1,1,1,0,0,1,1,0},
    { 1,1,1,0,0,1,1,1,0,0,1,1,0},
    { 1,1,0,0,1,1,1,0,0,1,1,1,0},
    { 1,1,1,1,1,1,1,1,1,1,1,1,0},
    { 1,1,1,1,1,1,1,1,1,1,1,1,0},
    { 1,1,1,1,1,1,1,1,1,1,1,1,0},
    { 1,1,1,1,1,1,1,1,1,1,1,1,0},
    { 0,1,1,1,1,0,1,1,1,1,0,1,0},
    { 0,0,1,1,0,0,0,1,1,0,0,0,0},
}; 

    
    if (act <= 2){
        lcd.drawSprite(_x,_y,_size,_size,(int*)ghost1);
        act = act + 1;
        }
    else if (act <= 5){
        lcd.drawSprite(_x,_y,_size,_size,(int*)ghost2);
        act = act + 1;
    }
    else if (act <= 7){
        lcd.drawSprite(_x,_y,_size,_size,(int*)ghost3);
        act = act + 1;
    }
    else if (act == 8){
        lcd.drawSprite(_x,_y,_size,_size,(int*)ghost3);
        act = 0;
    }
}

void Ghost::update(){
    _x += _velocity.x;
    _y += _velocity.y;
}

void Ghost::set_velocity(Position2D v){
    _velocity.x = v.x;
    _velocity.y = v.y;
}

void Ghost::set_pos(Position2D p) {
    _x = p.x;
    _y = p.y;
}

Position2D Ghost::get_velocity(){ return {_velocity.x,_velocity.y}; }

Position2D Ghost::get_pos() { return {_x,_y}; }

int Ghost::get_size() { return _size; }